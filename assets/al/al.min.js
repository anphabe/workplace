jQuery(function ($) {
    // Handler Prototype
    var AnphabeFormHandler = (function () {
        var $ajax = (function () {
            var ie = (/MSIE (\d+)\./.exec(navigator.userAgent) || [0, 0])[1];
            if (8 == ie || (9 == ie && 'file:' != location.protocol)) {
                return function (url, settings) {
                    var xdr = new XDomainRequest(), defer = $.Deferred();
                    xdr.open(settings.type, url);
                    xdr.onload = function () {
                        defer.resolve(this.responseText);
                    };
                    xdr.onerror = function () {
                        defer.reject();
                    };
                    xdr.send(settings.data);
                    return defer;
                };
            } else {
                $.support.cors = true;
                return $.ajax;
            }
        })();

        var prop = function (name, args) {
            name = '__' + name + '__';
            if (args.length) {
                this[name] = args[0];
                return this;
            }
            return this[name];
        };

        var attachMethods = function (obj, context, methods) {
            $.each(methods, function (i, method) {
                obj[method] = function () {
                    return context[method].apply(context, arguments);
                };
            });
            return obj;
        };

        var Form = function (settings) {
            settings = settings || {};
            this.__api_url__ = settings.api_url || ""
            this.__email__ = settings.email || '';
            this.__data__ = settings.data || [];
        };

        Form.prototype.email = function (value) {
            return prop.call(this, 'email', arguments);
        };

        Form.prototype.data = function (value) {
            return prop.call(this, 'data', arguments);
        };

        Form.prototype.api_url = function (value) {
            return prop.call(this, 'api_url', arguments);
        };

        Form.prototype.send = function (data, beforeStart) {
            var defer = attachMethods($.Deferred(), this, ['email', 'api_url', 'data', 'send']);
            if (beforeStart) {
                beforeStart.call(this, defer);
                if ('pending' != defer.state())
                    return defer;
            }
            $ajax(this.__api_url__, {
                type: 'POST',
                data: data
            }).done(function (responseData) {
                try {
                    if (responseData.error) defer.reject(responseData.error);
                    else defer.resolve(responseData.response);
                } catch (e) {
                    defer.reject('Incorrect server response.');
                }
            }).fail(function () {
                var error = 'Failed to query the server. ';
                if ('onLine' in navigator && !navigator.onLine)
                    error += 'No connection to the Internet.';
                else error += 'Check the connection and try again.';
                defer.reject(error);
            });
            return defer;
        };

        return {
            Form: function (settings) {
                return new Form(settings);
            }
        }

    })();

    // validate function
    var isValidEmail = function (input) {
        var isValid = true,
            value = $(input).val();

        if (value) {
            isValid = /^([^@]+?)@(([a-z0-9]-*)*[a-z0-9]+\.)+([a-z0-9]+)$/i.test(value);
        }

        return isValid;
    };

    /** Anphabe function */
    function updateUtmInput() {
        let query = window.location.search;  
        let searchParams = new URLSearchParams(query);
        if ( searchParams.has("utm_campaign")) {
            jQuery('[name ="utm_campaign"]').val(searchParams.get("utm_campaign"));
        }
        if ( searchParams.has("utm_source")) {
            jQuery('[name ="utm_source"]').val(searchParams.get("utm_source"));
        }
        if ( searchParams.has("utm_medium")) {
            jQuery('[name ="utm_medium"]').val(searchParams.get("utm_medium"));
        }
        if ( searchParams.has("utm_term")) {
            jQuery('[name ="utm_term"]').val(searchParams.get("utm_term"));
        }
        if ( searchParams.has("utm_content")) {
            jQuery('[name ="utm_content"]').val(searchParams.get("utm_content"));
        }
    }


    // Handle Real form
    $('[data-form-type="anphabe-lead"]').each(function () {
        var form,
            $this = $(this),
            $form = $this.is('form') ? $this : $this.find('form'),
            $alert = $this.find('[data-form-alert]'),
            $submit = $this.find('[type="submit"]'),
            $inputArr = $form.find('[data-form-field]'),
            alertSuccess = $alert.html();

        updateUtmInput();

        $inputArr.each(function (index, elem) {
            $(elem).on("focus", function () {
                $alert.attr('hidden', 'hidden');
                $alert.addClass('alert-success').removeClass('alert-danger');
                $alert.html('');
                $submit.removeClass('btn-loading').prop('disabled', false);
            })
        });

        // event on form submit
        $form.submit(function (event) {
            event.preventDefault();
            if ($submit.hasClass('btn-loading')) return;

            var data = {},
                inputs = $inputArr;

            $form.addClass('form-active');
            $submit.addClass('btn-loading').prop('disabled', true);
            $alert.html('');
            form = form || AnphabeFormHandler.Form({
                api_url: $form.attr('action')
            });

            function parseInputs(inputs) {
                var def = $.Deferred(),
                    arrDeferred = [];

                inputs.each(function (index, input) {
                    var $input = $(input),
                        typeInput = $input.attr('type'),
                        objDeferred = $.Deferred();

                    arrDeferred.push(objDeferred);

                    // valide email
                    if ($input.attr('name') === "email") {
                        if (!isValidEmail(input)) {
                            $submit.removeClass('btn-loading').prop('disabled', true);
                            def.reject(new Error('Form is not valid'));
                            return false;
                        }
                    }

                    switch (typeInput) {
                        case 'checkbox': {
                            data.push[$input.attr('data-form-field') || $input.attr('name')] = $input.prop("checked") ? $input.val() : 'No';
                            objDeferred.resolve();
                        }
                            break;
                        case 'radio': {
                            if ($input.prop("checked")) {
                                data.push[$input.attr('data-form-field') || $input.attr('name')] = $input.val();
                                objDeferred.resolve();
                            }
                        }
                            break;
                        default: {
                            data[$input.attr('data-form-field') || $input.attr('name')] = $input.val();
                            objDeferred.resolve();
                        }
                    }
                });

                return def.resolve(arrDeferred);
            }

            parseInputs(inputs).then(function (arrDef) {
                $.when.apply(this, arrDef).then(function () {
                    form.send(data)
                        .always(function () {
                            $submit.removeClass('btn-loading').prop('disabled', false);
                            $alert.removeAttr('hidden');
                        })
                        .then(function (message) {
                            window.location.href = "thankyou.html";
                        })
                        .fail(function (error) { // has error when server store data
                            window.location.href = "thankyou.html?err=1";
                        })
                }, function (err) { // validate error invalid
                    $alert.html(err.message);
                    $alert.removeClass('alert-success').addClass('alert-danger');
                    $alert.removeAttr('hidden');
                })
            });
        });
    });
});
